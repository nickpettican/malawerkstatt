{"version":3,"sources":["views/ProductsList/index.js","views/ProductsList/styles.js","App.js","serviceWorker.js","index.js"],"names":["ProductList","key","classes","this","props","productsSorted","productsData","sort","a","b","react_default","createElement","Fragment","CssBaseline_default","AppBar_default","position","className","appBar","Toolbar_default","ShoppingBasket_default","icon","Typography_default","variant","color","noWrap","heroUnit","heroContent","component","align","gutterBottom","paragraph","heroButtons","Grid_default","container","spacing","justify","item","Button_default","href","classNames","layout","cardGrid","map","_ref","index","title","description","url","price","size","price_num","img_url","size_num","sm","md","lg","Card_default","card","CardMedia_default","cardMedia","image","CardContent_default","cardContent","CardActions_default","target","footer","Component","withStyles","theme","marginRight","unit","backgroundColor","palette","background","paper","maxWidth","margin","padding","concat","marginTop","Object","defineProperty","width","marginLeft","breakpoints","up","height","display","flexDirection","paddingTop","flexGrow","App","ProductsList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iaAsBMA,mLACK,IAH6BC,EAI9BC,EAAYC,KAAKC,MAAjBF,QA8BAG,GAlC8BJ,EAkCgB,WAAdK,EAlCqBC,KAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAER,GAAOO,EAAEP,MAoCrF,OACES,EAAAF,EAAAG,cAACD,EAAAF,EAAMI,SAAP,KACEF,EAAAF,EAAAG,cAACE,EAAAL,EAAD,MACAE,EAAAF,EAAAG,cAACG,EAAAN,EAAD,CAAQO,SAAS,SAASC,UAAWd,EAAQe,QAC3CP,EAAAF,EAAAG,cAACO,EAAAV,EAAD,KACEE,EAAAF,EAAAG,cAACQ,EAAAX,EAAD,CAAgBQ,UAAWd,EAAQkB,OACnCV,EAAAF,EAAAG,cAACU,EAAAb,EAAD,CAAYc,QAAQ,KAAKC,MAAM,UAAUC,QAAM,GAA/C,2BAKJd,EAAAF,EAAAG,cAAA,YAEED,EAAAF,EAAAG,cAAA,OAAKK,UAAWd,EAAQuB,UACtBf,EAAAF,EAAAG,cAAA,OAAKK,UAAWd,EAAQwB,aACtBhB,EAAAF,EAAAG,cAACU,EAAAb,EAAD,CACEmB,UAAU,KACVL,QAAQ,KACRM,MAAM,SACNL,MAAM,cACNM,cAAY,GALd,yBASAnB,EAAAF,EAAAG,cAACU,EAAAb,EAAD,CAAYoB,MAAM,SAASL,MAAM,gBAAgBO,WAAS,GAA1D,2IAIApB,EAAAF,EAAAG,cAACU,EAAAb,EAAD,CAAYoB,MAAM,SAASL,MAAM,gBAAgBO,WAAS,GAA1D,sEAGApB,EAAAF,EAAAG,cAACU,EAAAb,EAAD,CAAYoB,MAAM,SAASL,MAAM,gBAAgBO,WAAS,GAA1D,kVAOApB,EAAAF,EAAAG,cAACU,EAAAb,EAAD,CAAYoB,MAAM,SAASL,MAAM,gBAAgBO,WAAS,GAA1D,qMAKApB,EAAAF,EAAAG,cAAA,OAAKK,UAAWd,EAAQ6B,aACtBrB,EAAAF,EAAAG,cAACqB,EAAAxB,EAAD,CAAMyB,WAAS,EAACC,QAAS,GAAIC,QAAQ,UACnCzB,EAAAF,EAAAG,cAACqB,EAAAxB,EAAD,CAAM4B,MAAI,GACR1B,EAAAF,EAAAG,cAAC0B,EAAA7B,EAAD,CACE8B,KAAK,8GACLhB,QAAQ,YACRC,MAAM,WAHR,sBAYVb,EAAAF,EAAAG,cAAA,OAAKK,UAAWuB,IAAWrC,EAAQsC,OAAQtC,EAAQuC,WAEjD/B,EAAAF,EAAAG,cAACqB,EAAAxB,EAAD,CAAMyB,WAAS,EAACC,QAAS,IACtB7B,EAAeqC,IA3FJ,SAAAC,EAEpBC,GAFoB,IAClBC,EADkBF,EAClBE,MAAOC,EADWH,EACXG,YAAaC,EADFJ,EACEI,IAAKC,EADPL,EACOK,MAAkBC,GADzBN,EACcO,UADdP,EACyBM,MAAgBE,GADzCR,EAC+BS,SAD/BT,EACyCQ,SADzC,OAIpBzC,EAAAF,EAAAG,cAACqB,EAAAxB,EAAD,CAAM4B,MAAI,EAACnC,IAAK2C,EAAOS,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACvC7C,EAAAF,EAAAG,cAAC6C,EAAAhD,EAAD,CAAMQ,UAAWd,EAAQuD,MACvB/C,EAAAF,EAAAG,cAAC+C,EAAAlD,EAAD,CAAWQ,UAAWd,EAAQyD,UAAWC,MAAOT,EAASN,MAAOA,IAChEnC,EAAAF,EAAAG,cAACkD,EAAArD,EAAD,CAAaQ,UAAWd,EAAQ4D,aAC9BpD,EAAAF,EAAAG,cAACU,EAAAb,EAAD,CAAYqB,cAAY,EAACP,QAAQ,KAAKK,UAAU,MAC7CkB,GAEHnC,EAAAF,EAAAG,cAACU,EAAAb,EAAD,CAAYqB,cAAY,GAAEiB,GAC1BpC,EAAAF,EAAAG,cAACU,EAAAb,EAAD,CAAYqB,cAAY,EAACP,QAAQ,MAC9B0B,IAGLtC,EAAAF,EAAAG,cAACoD,EAAAvD,EAAD,KACEE,EAAAF,EAAAG,cAAC0B,EAAA7B,EAAD,CAAQwD,OAAO,SAAS1B,KAAMS,EAAKE,KAAK,QAAQ1B,MAAM,WAAtD,QAGAb,EAAAF,EAAAG,cAAC0B,EAAA7B,EAAD,CAAQyC,KAAK,QAAQ1B,MAAM,WACxB0B,WA2EPvC,EAAAF,EAAAG,cAAA,UAAQK,UAAWd,EAAQ+D,QACzBvD,EAAAF,EAAAG,cAACU,EAAAb,EAAD,CAAYc,QAAQ,KAAKM,MAAM,SAASC,cAAY,GAApD,0BAGAnB,EAAAF,EAAAG,cAACU,EAAAb,EAAD,CAAYc,QAAQ,YAAYM,MAAM,SAASL,MAAM,gBAAgBI,UAAU,KAA/E,+DAxGgBuC,aAsHXC,uBC5IA,SAACC,GAAD,MAAY,CACzBnD,OAAQ,CACNF,SAAU,YAEZK,KAAM,CACJiD,YAAkC,EAArBD,EAAMlC,QAAQoC,MAE7B7C,SAAU,CACR8C,gBAAiBH,EAAMI,QAAQC,WAAWC,OAE5ChD,YAAa,CACXiD,SAAU,IACVC,OAAQ,SACRC,QAAO,GAAAC,OAA0B,EAArBV,EAAMlC,QAAQoC,KAAnB,SAAAQ,OAAwD,EAArBV,EAAMlC,QAAQoC,KAAjD,OAETvC,YAAa,CACXgD,UAAgC,EAArBX,EAAMlC,QAAQoC,MAE3B9B,OAAOwC,OAAAC,EAAA,EAAAD,CAAA,CACLE,MAAO,OACPC,WAAiC,EAArBf,EAAMlC,QAAQoC,KAC1BD,YAAkC,EAArBD,EAAMlC,QAAQoC,MAC1BF,EAAMgB,YAAYC,GAAG,KAA4B,EAArBjB,EAAMlC,QAAQoC,KAAW,GAAK,CACzDY,MAAO,KACPC,WAAY,OACZd,YAAa,SAGjB5B,SAAU,CACRoC,QAAO,GAAAC,OAA0B,EAArBV,EAAMlC,QAAQoC,KAAnB,SAETb,KAAM,CACJ6B,OAAQ,OACRC,QAAS,OACTC,cAAe,UAEjB7B,UAAW,CACT8B,WAAY,UAEd3B,YAAa,CACX4B,SAAU,GAEZzB,OAAQ,CACNM,gBAAiBH,EAAMI,QAAQC,WAAWC,MAC1CG,QAA8B,EAArBT,EAAMlC,QAAQoC,QDgGZH,CAAmBnE,GElInB2F,mLAJX,OAAOjF,EAAAF,EAAAG,cAACiF,EAAD,aAFO1B,aCQE2B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOzF,EAAAF,EAAAG,cAACyF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.3173bc1e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport ShoppingBasket from \"@material-ui/icons/ShoppingBasket\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport productsData from \"../../config/guruperlen_stupa_products.min.json\";\n\nimport styles from \"./styles\";\n\nconst sortDescending = (arrayOfObjects, key) => arrayOfObjects.sort((a, b) => b[key] - a[key]);\n\nclass ProductList extends Component {\n  render() {\n    let { classes } = this.props;\n\n    const renderProduct = (\n      { title, description, url, price, price_num, size, size_num, img_url },\n      index\n    ) => (\n      <Grid item key={index} sm={6} md={4} lg={3}>\n        <Card className={classes.card}>\n          <CardMedia className={classes.cardMedia} image={img_url} title={title} />\n          <CardContent className={classes.cardContent}>\n            <Typography gutterBottom variant=\"h6\" component=\"h2\">\n              {title}\n            </Typography>\n            <Typography gutterBottom>{description}</Typography>\n            <Typography gutterBottom variant=\"h6\">\n              {price}\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Button target=\"_blank\" href={url} size=\"small\" color=\"primary\">\n              View\n            </Button>\n            <Button size=\"small\" color=\"primary\">\n              {size}\n            </Button>\n          </CardActions>\n        </Card>\n      </Grid>\n    );\n\n    const productsSorted = sortDescending(productsData, \"size_num\");\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <AppBar position=\"static\" className={classes.appBar}>\n          <Toolbar>\n            <ShoppingBasket className={classes.icon} />\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              Guru beads and stupas\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <main>\n          {/* Hero unit */}\n          <div className={classes.heroUnit}>\n            <div className={classes.heroContent}>\n              <Typography\n                component=\"h1\"\n                variant=\"h2\"\n                align=\"center\"\n                color=\"textPrimary\"\n                gutterBottom\n              >\n                Guru beads and stupas\n              </Typography>\n              <Typography align=\"center\" color=\"textSecondary\" paragraph>\n                We carry more than 150 different varieties of cucumber beads with stupas in\n                different sizes A Stet consists of a Guruperle and a Stupa.\n              </Typography>\n              <Typography align=\"center\" color=\"textSecondary\" paragraph>\n                A Mala without Guruperle and Stupa is not a Mala, just a necklace.\n              </Typography>\n              <Typography align=\"center\" color=\"textSecondary\" paragraph>\n                The Guruperle has 3 holes. Pearls with only one hole are just final pearls. For\n                every Mala belongs a real Guruperle, so 3 holes and a stupa! The Guruperle and the\n                stupa symbolize Buddha's enlightenment spirit. When we arrive at the Guruperle while\n                meditating, we turn over the Mala. We do not go over the Guruperle with Stupa over\n                it.\n              </Typography>\n              <Typography align=\"center\" color=\"textSecondary\" paragraph>\n                The Guruperle and the stupa symbolize Buddha's enlightenment spirit. When we arrive\n                at the Guruperle while meditating, we turn over the Mala. We do not go over the\n                Guruperle with Stupa over it.\n              </Typography>\n              <div className={classes.heroButtons}>\n                <Grid container spacing={16} justify=\"center\">\n                  <Grid item>\n                    <Button\n                      href=\"https://www.malawerkstatt.de/epages/61255242.sf/de_DE/?ViewAction=View&ObjectID=53284986&PageSize=60&Page=1\"\n                      variant=\"contained\"\n                      color=\"primary\"\n                    >\n                      Original page\n                    </Button>\n                  </Grid>\n                </Grid>\n              </div>\n            </div>\n          </div>\n          <div className={classNames(classes.layout, classes.cardGrid)}>\n            {/* End hero unit */}\n            <Grid container spacing={40}>\n              {productsSorted.map(renderProduct)}\n            </Grid>\n          </div>\n        </main>\n        {/* Footer */}\n        <footer className={classes.footer}>\n          <Typography variant=\"h6\" align=\"center\" gutterBottom>\n            A better Malawerkstatt\n          </Typography>\n          <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n            Beautiful, elegant and only showing what is needed\n          </Typography>\n        </footer>\n        {/* End footer */}\n      </React.Fragment>\n    );\n  }\n}\n\nProductList.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ProductList);\n","export default (theme) => ({\n  appBar: {\n    position: \"relative\"\n  },\n  icon: {\n    marginRight: theme.spacing.unit * 2\n  },\n  heroUnit: {\n    backgroundColor: theme.palette.background.paper\n  },\n  heroContent: {\n    maxWidth: 600,\n    margin: \"0 auto\",\n    padding: `${theme.spacing.unit * 8}px 0 ${theme.spacing.unit * 6}px`\n  },\n  heroButtons: {\n    marginTop: theme.spacing.unit * 4\n  },\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\n      width: 1100,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n  cardGrid: {\n    padding: `${theme.spacing.unit * 8}px 0`\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\" // 16:9\n  },\n  cardContent: {\n    flexGrow: 1\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing.unit * 6\n  }\n});\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport ProductsList from \"./views/ProductsList\";\n\nclass App extends Component {\n  render() {\n    return <ProductsList />;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}